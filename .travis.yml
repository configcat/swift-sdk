language: objective-c

osx_image: xcode12.2

stages:
  - test
  - coverage
  - lint
  - name: publish
    if: tag =~ /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/

before_install:
  - gem install slather
  - gem install cocoapods
  - pod --version

jobs:
  include:
  - stage: test
    script:
    - set -o pipefail
    - xcodebuild build-for-testing -sdk iphonesimulator14.2 -project ConfigCat.xcodeproj -scheme "ConfigCat" -destination "OS=14.2,name=iPhone 8" CODE_SIGNING_REQUIRED=NO -quiet
    - travis_retry xcodebuild test-without-building -sdk iphonesimulator14.2 -project ConfigCat.xcodeproj -scheme "ConfigCat" -destination "OS=14.2,name=iPhone 8" CODE_SIGNING_REQUIRED=NO -quiet
    
    - xcodebuild build-for-testing -sdk appletvsimulator14.2 -project ConfigCat.xcodeproj -scheme "ConfigCat" -destination "OS=14.2,name=Apple TV 4K (at 1080p)" CODE_SIGNING_REQUIRED=NO -quiet
    - travis_retry xcodebuild test-without-building -sdk appletvsimulator14.2 -project ConfigCat.xcodeproj -scheme "ConfigCat" -destination "OS=14.2,name=Apple TV 4K (at 1080p)" CODE_SIGNING_REQUIRED=NO -quiet
    
    - xcodebuild build-for-testing -sdk macosx11.0 -project ConfigCat.xcodeproj -scheme "ConfigCat" -destination "arch=x86_64" -quiet
    - travis_retry xcodebuild test-without-building -sdk macosx11.0 -project ConfigCat.xcodeproj -scheme "ConfigCat" -destination "arch=x86_64" -quiet

  - stage: coverage
    script:
    - set -o pipefail
    - xcodebuild build-for-testing -sdk macosx11.0 -project ConfigCat.xcodeproj -scheme "ConfigCat Coverage" -destination "arch=x86_64" -quiet
    - xcodebuild test-without-building -sdk macosx11.0 -project ConfigCat.xcodeproj -scheme "ConfigCat Coverage" -destination "arch=x86_64" -quiet
    - slather
    - bash <(curl -s https://codecov.io/bash) -f ./cobertura.xml

  - stage: lint
    script:
    - pod lib lint

  - stage: publish
    script:
    - pod trunk push
